// com.adam.mobile.Accel// Adam Riggs//package com.adam.mobile {	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.events.*;	import flash.sensors.Accelerometer;		public class Accel{				//vars		private var _accelerationX:Number;		private var _accelerationY:Number;		private var _accelerationZ:Number;		private var _isSupported:Boolean;				//objects		private var appData:AppData=AppData.instance;		private var accelerometer:Accelerometer;				//const		public const NAME:String="accel";		public const RETURNTYPE:String=NAME;				/** Storage for the singleton instance. */		private static const _instance:Accel = new Accel(AccelLock);				public function Accel(lock:Class){			// Verify that the lock is the correct class reference.			if (lock != AccelLock)			{				throw new Error("Invalid Accel access.  Use Accel.instance instead.");			} else {				init();			}		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();			initObjs();		}				private function initVars():void{					}				private function initEvents():void{			appData.eventManager.listen(NAME, onAccel);		}				private function initObjs():void{			if(Accelerometer.isSupported){				accelerometer=new Accelerometer();				accelerometer.addEventListener(AccelerometerEvent.UPDATE, onUpdate);				_isSupported=true;			} else {				debug("***** Accelerometer is not supported");				_isSupported=false;			}					}		//*****Core Functionality						//*****Event Handlers				private function onUpdate(e:AccelerometerEvent):void{			_accelerationX=e.accelerationX;			_accelerationY=e.accelerationY;			_accelerationZ=e.accelerationZ;			//			debug("accelerationX=="+accelerationX);//			debug("accelerationY=="+accelerationY);//			debug("accelerationZ=="+accelerationZ);//			debug("*****");		}				private function onAccel(e:MuleEvent):void{			/*debug("onAccel()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){												default:					debug("onAccel()");					debug("*type not found");					debug("e.data.sender=="+e.data.sender);					debug("e.data.type=="+e.data.type);					break;			}		}				//*****Gets and Sets				public static function get instance():Accel{return _instance;}				public function get accelerationX():Number{return _accelerationX;}		public function get accelerationY():Number{return _accelerationY;}		public function get accelerationZ():Number{return _accelerationZ;}		public function get isSupported():Boolean{return _isSupported;}		//*****Utility Functions				//**debug		private function debug(str:String):void{			appData.debug(NAME,str);		}				}//end class}//end packageclass AccelLock{}