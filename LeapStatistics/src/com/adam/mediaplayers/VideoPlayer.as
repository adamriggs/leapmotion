// com.adam.utils.VideoPlayer// Adam Riggs//package com.adam.mediaplayers{	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;		import flash.display.Sprite;	import flash.events.*;	import flash.media.Video;	import flash.net.NetConnection;	import flash.net.NetStream;
		public class VideoPlayer extends Sprite {				//vars				//objects		private var appData:AppData=AppData.instance;				private var _nc:NetConnection;		private var _ns:NetStream;		private var _video:Video;		private var _client:Object;						//const		public const NAME:String="videoPlayer";		public const RETURNTYPE:String=NAME;				public function VideoPlayer(){						init();		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();			initObjs();		}				private function initVars():void{					}				private function initEvents():void{			appData.eventManager.listen(NAME, onVideoPlayer);		}				private function initObjs():void{						_nc=new NetConnection();			_nc.connect(null);			_ns=new NetStream(_nc);						_video=new Video(320,240);			addChild(_video);						_client=new Object();			_ns.client=_client;			_client.onMetaData=onMetaData;						_video.attachNetStream(_ns);					}		//*****Core Functionality				public function setSize(width:int,height:int):void{			_video.width=width;			_video.height=height;		}				public function play(name:String):void{			_ns.play(name);		}				public function stop():void{			_ns.close();		}				public function pause():void{			_ns.pause();		}				public function loop():void{					}		//*****Event Handlers				private function onMetaData(data:Object):void{			debug("onMetaData()");			appData.listObject(data);		}				private function onVideoPlayer(e:MuleEvent):void{			/*debug("onVideoPlayer()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){																default:					debug("onVideoPlayer()");					debug("*type not found");					debug("e.data.sender=="+e.data.sender);					debug("e.data.type=="+e.data.type);				break;							}		}				//*****Gets and Sets						//*****Utility Functions				//**visibility		public function show():void{			this.visible = true;		}				public function hide():void{			this.visible = false;		}				//**debug		private function debug(str:String):void{			appData.debug(NAME,str);		}				}//end class}//end package